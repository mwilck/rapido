#! /bin/bash
MYDIR=$(dirname $0)
RAPIDO_DIR=$(cd $MYDIR/..; pwd)

[[ $MYDIR/err_handler.sh ]] || exit 1
. $MYDIR/err_handler.sh
. $RAPIDO_DIR/rapido.conf

: ${CONFIG:=$RAPIDO_DIR/kernel/sle12sp3_config}
: ${TESTCASE:=$RAPIDO_DIR/cut_nvme_local.sh}
: ${TIMEOUT:=30}
: ${SUDO:=}
: ${LOGFILE:=/tmp/rapido-bisect.log}

COMP_DIR=$KERNEL_SRC
[[ -d "$COMP_DIR" ]]
if [[ -d $KERNEL_SRC/.git ]]; then
    BASE_DIR=
else
    BASE_DIR=$(cd $KERNEL_SRC/../..; pwd)
    [[ -f $BASE_DIR/series.conf ]]
fi

log () {
    local T="$(date +%H:%M:%S)"
    echo "$T" "$@" >&2
    echo "======== $T $@ ========"
}

compile_kernel() {
    if [[ $BASE_DIR ]]; then
	log extracting sources in $BASE_DIR
	(cd $BASE_DIR && ./scripts/sequence-patch.sh --fast)
	[[ "$KERNEL_SRC" = "$BASE_DIR/tmp/current" ||
	   "$KERNEL_SRC" = $(readlink -f "$BASE_DIR/tmp/current") ]] || exit 129
    fi
    cp "$CONFIG" "$COMP_DIR"/.config
    log compiling kernel in $COMP_DIR
    (cd "$COMP_DIR"
     make olddefconfig
    make -j4
     make INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH=$KERNEL_INSTALL_MOD_PATH \
	 modules_install) 2>&1
}

prep() {
    (cd "$RAPIDO_DIR" && rm -f initrds/myinitrd && "$TESTCASE") 2>&1
    [[ -f $RAPIDO_DIR/initrds/myinitrd ]]
}

run_test() {
    local st=$(date +%s) end now vm1 tmp res

    pushd $RAPIDO_DIR &>/dev/null
    tmp=$(mktemp /tmp/rapidovm-XXXXXX)
    log starting vm, logs in $tmp
    set +m
    $SUDO ./vm.sh &>$tmp &
    vm1=$!
    end=$((st+TIMEOUT))
    now=$(date +%s)
    while [[ $now -le $end ]]; do
	grep -qa "TEST SUCCESSFUL" $tmp && break
	[[ -d /proc/$vm1 ]] || break
	sleep 1
	now=$(date +%s)
    done
    [[ ! -d /proc/$vm1 ]] || kill $vm1 &>/dev/null
    kill $(cat initrds/rapido_vm1.pid) &>/dev/null
    set -m
    cat $tmp >&1
    grep -qa "TEST SUCCESSFUL" $tmp
    res=$?
    rm -f $tmp
    popd &>/dev/null
    return $res
}

exec >>$LOGFILE
log output in $LOGFILE

compile_kernel
prep

if run_test; then
    result=0
else
    result=1
fi

log result=$result
exit $result
